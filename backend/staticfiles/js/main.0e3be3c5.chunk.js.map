{"version":3,"sources":["layout/imgs/crypto8.png","layout/imgs/crypto7.jpg","reducers/ThemeReducer.jsx","constants/action-types.jsx","reducers/apiDataReducer.jsx","reducers/newsReducer.jsx","reducers/chartReducer.jsx","reducers/walletsReducer.jsx","reducers/explorerReducer.jsx","reducers/xChangeReducer.jsx","reducers/WSocketReducer.jsx","store.js","actions/Theme.jsx","layout/Header.jsx","layout/Footer.jsx","services/apisources.jsx","actions/apiData.jsx","actions/websocket.jsx","components/Cryptocharts.jsx","actions/sort.jsx","selectors/sortData.jsx","components/Tables.jsx","components/Minichart.jsx","components/ModalCrypto.jsx","pages/Home.jsx","components/NewsSites.jsx","pages/News.jsx","selectors/TopCharts.jsx","components/BaseCharts.jsx","pages/Charts.jsx","pages/Wallets.jsx","pages/Explorer.jsx","pages/xChange.jsx","layout/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","theme","color","textColor","themeReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","apiData","localStorage","getItem","JSON","parse","sortKey","sortDirection","apiDataReducer","apiDataReducer_objectSpread","datanews","loading","error","latestnews","newsReducer","newsReducer_objectSpread","chartData","loadingch","chartReducer","chartReducer_objectSpread","walletsData","walletsReducer","walletsReducer_objectSpread","explorerData","explorerReducer","explorerReducer_objectSpread","coinChangeData","xChangeReducer","xChangeReducer_objectSpread","wsData","cryptoData","explorerInfo","exchangeData","status","WSocketReducer","WSocketReducer_objectSpread","reducers","combineReducers","news","chart","wallets","explorer","xchange","WSocket","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","setThemeAction","connect","txtColor","dispatch","withRouter","props","require","_useState","useState","_useState2","Object","slicedToArray","checked","Check","ThemeButton","withStyles","root","backgroundColor","&:hover","Button","Typography","ThemeSwitch","switchBase","grey","&$checked","&$checked + $track","track","Switch","react_default","a","createElement","Fragment","Navbar","collapseOnSelect","expand","className","style","IconButton","edge","aria-label","onClick","history","push","index_esm","size","Collapse","id","Nav","href","Form","inline","FormControl","placeholder","Toggle","aria-controls","Footer","UrlApiImage","getChartData","topsymbol","limit","timechart","console","log","promises","map","_ref","asyncToGenerator","regenerator_default","mark","_callee","symbols","wrap","_context","prev","next","axios","get","concat","stop","_x","apply","this","all","then","data","i","time","symbol","finaldata","Data","setItem","stringify","catch","ConnectWS","wsUrl","wsconn","WebSocket","onopen","event","send","message","onmessage","onerror","onclose","Linecharts","randomData","now","Date","oneDay","value","Math","random","name","toString","getFullYear","getMonth","getDate","join","round","option","title","text","textStyle","tooltip","trigger","formatter","params","date","axisPointer","animation","xAxis","splitLine","show","yAxis","boundaryGap","series","smooth","areaStyle","showSymbol","hoverAnimation","setInterval","shift","lib_default","notMerge","lazyUpdate","Line2","chartDate","keys","line","index","moment","format","close","grid","borderColor","label","splitNumber","min","datasetIndex","height","width","setSort","getState","sortParams","sortData","createSelector","direction","orderBy","e","RAW","USD","PRICE","CHANGEPCT24HOUR","MKTCAP","stythtd","padding","apiDatas","sortkey","Table","responsive","borderless","hover","striped","background","textAlign","Tables_objectSpread","CoinInfo","coin","key","detailCrypto","overflowY","src","ImageUrl","FullName","Name","DISPLAY","SUPPLY","VOLUME24HOUR","useEffect","par1","FormControl_FormControl","InputLabel","htmlFor","Select","onChange","target","input","OutlinedInput","labelWidth","MenuItem","ticker","Card","Header","Body","renderprops","items","from","opacity","enter","leave","item","th","defineProperty","td","Modal","modal","onHide","showModal","centered","closeButton","Title","info","CHANGEPCTDAY","colSpan","OPENDAY","HIGHDAY","LOWDAY","VOLUMEDAY","BlockNumber","LASTMARKET","Cryptocharts","es_Button","variant","getApiData","_useState3","_useState4","crypto","showCrypto","react_spinners_kit_lib","frontColor","backColor","components_Minichart","components_Tables","cryptopar","components_ModalCrypto","newsData","Alert","Img","image","rank","site","description","link","ButtonGroup","DropdownButton","as","Dropdown","Item","eventKey","getLatest","mainsite","maindata","newsitem","url","loadingrx","getApiNews","keyword","post","searchsite","headers","Content-Type","components_NewsSites","TopCharts","numTop","Coinlist","topCrypto","numberTop","cryptoCharts","setValue","AppBar","position","Tabs","newValue","removeItem","Tab","Card_Card","chartime","Charts","components_BaseCharts","loadingwl","getWallets","_th","LogoUrl","react_rating_esm","initialRating","Rating","Avg","emptySymbol","ti_index_esm","fullSymbol","Security","Coins","coins","Platforms","os","WalletFeatures","AffiliateURL","PoW","PoS","diff","supply","btc","CentralizationType","Grade","ProgressBar","animated","GradePoints","TOTALVOLUME24H","BTC","OrderBook","hist","createBrowserHistory","imagecode1","imagecode2","backgroundImage","textShadow","textOutline","textDecoration","react_router","layout_Header","exact","path","component","Home","News","Wallets","Explorer","xChange","layout_Footer","App","es","layout_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e3be3c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crypto8.dfc87482.png\";","module.exports = __webpack_public_path__ + \"static/media/crypto7.501d5698.jpg\";","import { THEME_CHANGE } from '../constants/action-types'\n\nconst initialState = {\n\n  theme: {\n    color: 'whitesmoke',\n    textColor: 'black',\n\n  }\n}\nconst themeReducer = (state = initialState, action) => {\n\n\n  //console.log(action.payload, \"PAYLOAD PARA CAMBIAR\")\n  switch (action.type) {\n    case THEME_CHANGE:\n\n      return {\n        ...state,\n        theme: {\n          ...state.theme,\n          color: action.payload,\n          textColor: state.theme.color\n        }\n      };\n    default:\n\n      return state\n\n  }\n}\nexport default themeReducer;","export const THEME_CHANGE = 'THEME_CHANGE'\n//\nexport const GET_DATA = 'GET_DATA'\nexport const ERROR_GET = ' ERROR_GET'\nexport const DATA_FETCHED = 'DATA_FETCHED'\nexport const SORTED = 'SORTED'\n//\nexport const GET_NEWS = 'GET_NEWS'\nexport const ERROR_GET_NEWS = 'ERROR_GET_NEWS'\nexport const LOADING_FETCH = 'LOADING_FETCH'\nexport const GET_LATEST = 'GET_LATEST'\n//\nexport const LOADING_CHART = 'LOADING_CHART'\nexport const CHART_READY = 'CHART_READY'\nexport const ERROR_GET_CHART = 'ERROR_GET_CHART'\n//\nexport const GET_WALLETS = 'GET_WALLETS'\nexport const ERROR_GET_WALLETS = 'ERROR_GET_WALLETS'\nexport const LOADING_WALLETS = 'LOADING_WALLETS'\n//export const GET_LATEST = \"GET_LATEST\"\nexport const LOADING_EXPLORER = 'LOADING_EXPLORER'\nexport const GET_EXPLORER = 'GET_EXPLORER'\nexport const ERROR_GET_EXPLORER = 'ERROR_GET_EXPLORER'\n//\nexport const LOADING_COINCHANGE = 'LOADING_COINCHANGE'\nexport const COINCHANGE_READY = 'COINCHANGE_READY'\nexport const ERROR_GET_COINCHANGE = 'ERROR_GET_COINCHANGE'\n//\n\n// WebSockets\nexport const WEBSOCKET_CONNECT = \"WEBSOCKET_CONNECT\";\nexport const WEBSOCKET_CONNECTING = \"WEBSOCKET_CONNECTING\";\nexport const WEBSOCKET_CONNECTED = \"WEBSOCKET_CONNECTED\";\nexport const WEBSOCKET_ERROR = \"WEBSOCKET_ERROR\";\nexport const WEBSOCKET_DISCONNECT = \"WEBSOCKET_DISCONNECT\";\nexport const WEBSOCKET_DISCONNECTED = \"WEBSOCKET_DISCONNECTED\";\nexport const WEBSOCKET_MESSAGE = \"WEBSOCKET_MESSAGE\";\n//\n","import { GET_DATA, ERROR_GET, SORTED } from '../constants/action-types';\n\n\nconst initialState = {\n  //\n  apiData: localStorage.getItem('apiData')\n    ? JSON.parse(localStorage.getItem('apiData'))\n    : [0],\n  sortKey: 'marketCap',\n  sortDirection: 'desc'\n};\n\n\n\nconst apiDataReducer = (state = initialState, action) => {\n  //console.log(action.payload, \"PAYLOAD PARA CAMBIAR\")\n\n  switch (action.type) {\n    case GET_DATA:\n      return {\n        ...state,\n        apiData: action.payload\n      };\n    case ERROR_GET:\n      return {\n        ...state,\n        apiData: action.payload\n      };\n\n    case SORTED:\n      return {\n        ...state,\n        sortKey: action.payload.sortKey,\n        sortDirection: action.payload.sortDirection\n      };\n    default:\n      return state;\n  }\n};\n\nexport default apiDataReducer;\n","import { GET_NEWS, ERROR_GET_NEWS, LOADING_FETCH, GET_LATEST } from '../constants/action-types'\n\nconst initialState = {\n\n  datanews: [0],\n  loading: false,\n  error: '',\n  latestnews: []\n\n}\n\nconst newsReducer = (state = initialState, action) => {\n\n  //console.log(action.payload, \"PAYLOAD PARA CAMBIAR\")\n  switch (action.type) {\n    case GET_NEWS:\n\n      return {\n        ...state,\n        datanews: action.payload,\n        loading: false\n\n      };\n    case ERROR_GET_NEWS:\n\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n\n    case GET_LATEST:\n\n      return {\n        ...state,\n        latestnews: action.payload,\n        loading: false\n\n      }\n\n    case LOADING_FETCH:\n\n      return {\n        ...state,\n        loading: true\n\n      }\n\n    default:\n\n      return state\n\n  }\n}\nexport default newsReducer;","import {\n  LOADING_CHART,\n  CHART_READY,\n  ERROR_GET_CHART\n} from '../constants/action-types';\n\n\nconst initialState = {\n  chartData: localStorage.getItem('chartdata')\n    ? JSON.parse(localStorage.getItem('chartdata'))\n    : [],\n  error: '',\n  loadingch: false\n};\n\n\nconst chartReducer = (state = initialState, action) => {\n  //console.log(action.payload, \"PAYLOAD PARA CAMBIAR\")\n  switch (action.type) {\n    case LOADING_CHART:\n      return {\n        ...state,\n        loadingch: true,\n        chartData: []\n      };\n    case ERROR_GET_CHART:\n      return {\n        ...state,\n        loadingch: false,\n        error: action.payload\n      };\n\n    case CHART_READY:\n      return {\n        ...state,\n        loadingch: false,\n        chartData: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default chartReducer;\n","import {\n  GET_WALLETS,\n  LOADING_WALLETS,\n  ERROR_GET_WALLETS\n} from '../constants/action-types'\n\nconst initialState = {\n  walletsData: '',\n  loading: false,\n  error: ''\n}\n\n\n\nconst walletsReducer = (state = initialState, action) => {\n  //console.log(action.payload, \"PAYLOAD PARA CAMBIAR\")\n  switch (action.type) {\n    case GET_WALLETS:\n      return {\n        ...state,\n        walletsData: action.payload,\n        loading: false\n      }\n    case ERROR_GET_WALLETS:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n\n    case LOADING_WALLETS:\n      return {\n        ...state,\n        loading: true\n      }\n\n    default:\n      return state\n  }\n}\nexport default walletsReducer\n","import {\n    LOADING_EXPLORER,\n    GET_EXPLORER,\n    ERROR_GET_EXPLORER\n} from '../constants/action-types';\n\n\nconst initialState = {\n    explorerData: localStorage.getItem('explorerData')\n        ? JSON.parse(localStorage.getItem('explorerData'))\n        : [],\n    error: '',\n    loadingch: false\n};\n\n\nconst explorerReducer = (state = initialState, action) => {\n    //console.log(action.payload, \"PAYLOAD PARA CAMBIAR\")\n    switch (action.type) {\n        case LOADING_EXPLORER:\n            return {\n                ...state,\n                loadingch: true,\n                explorerData: []\n            };\n        case ERROR_GET_EXPLORER:\n            return {\n                ...state,\n                loadingch: false,\n                error: action.payload\n            };\n\n        case GET_EXPLORER:\n            return {\n                ...state,\n                loadingch: false,\n                explorerData: action.payload\n            };\n        default:\n            return state;\n    }\n};\nexport default explorerReducer;\n","import {\n    LOADING_COINCHANGE,\n    COINCHANGE_READY,\n    ERROR_GET_COINCHANGE\n} from '../constants/action-types';\n\n\nconst initialState = {\n    coinChangeData: localStorage.getItem('coinChangedata')\n        ? JSON.parse(localStorage.getItem('coinChangedata'))\n        : [],\n    error: '',\n    loadingch: false\n};\n\nconst xChangeReducer = (state = initialState, action) => {\n    //console.log(action.payload, \"PAYLOAD PARA CAMBIAR\")\n    switch (action.type) {\n        case LOADING_COINCHANGE:\n            return {\n                ...state,\n                loadingch: true,\n                coinChangeData: []\n            };\n        case ERROR_GET_COINCHANGE:\n            return {\n                ...state,\n                loadingch: false,\n                error: action.payload\n            };\n\n        case COINCHANGE_READY:\n            return {\n                ...state,\n                loadingch: false,\n                coinChangeData: action.payload\n            };\n        default:\n            return state;\n    }\n};\nexport default xChangeReducer;\n","import {\n    WEBSOCKET_CONNECT, WEBSOCKET_CONNECTING, WEBSOCKET_CONNECTED,\n    WEBSOCKET_MESSAGE, WEBSOCKET_DISCONNECT, WEBSOCKET_DISCONNECTED,\n    WEBSOCKET_ERROR\n} from '../constants/action-types';\n\nconst initialState = {\n    //\n    wsData: [{\n        'cryptoData': localStorage.getItem('apiData')\n            ? JSON.parse(localStorage.getItem('apiData'))\n            : '',\n        'explorerInfo': '',\n        'exchangeData': ''\n    }],\n    error: '',\n    status: 'disconnected'\n};\n\nconst WSocketReducer = (state = initialState, action) => {\n    //console.log(action.payload, \"PAYLOAD PARA CAMBIAR\")\n\n    switch (action.type) {\n        case WEBSOCKET_CONNECTING:\n            return {\n                ...state,\n                status: 'connecting'\n            };\n        case WEBSOCKET_CONNECTED:\n            return {\n                ...state,\n                status: 'connected'\n            };\n\n        case WEBSOCKET_MESSAGE:\n            return {\n                ...state,\n                wsData: [{\n                    'cryptoData': action.payload.cryptoData,\n                    'explorerInfo': action.payload.explorerInfo,\n                    'exchangeData': action.payload.exchangeData\n                }],\n                status: 'received message'\n            };\n        case WEBSOCKET_DISCONNECTED:\n            return {\n                ...state,\n                status: 'disconnected'\n            };\n\n        case WEBSOCKET_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                status: 'error'\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default WSocketReducer;\n","import {\n  createStore,\n  combineReducers,\n  applyMiddleware,\n  compose\n} from 'redux'\nimport themeReducer from './reducers/ThemeReducer'\nimport apiDataReducer from './reducers/apiDataReducer'\nimport newsReducer from './reducers/newsReducer'\nimport chartReducer from './reducers/chartReducer'\nimport walletsReducer from './reducers/walletsReducer'\nimport explorerReducer from './reducers/explorerReducer'\nimport xChangeReducer from './reducers/xChangeReducer'\nimport WSocketReducer from './reducers/WSocketReducer'\nimport thunk from 'redux-thunk'\n\nconst reducers = combineReducers({\n  theme: themeReducer,\n  apiData: apiDataReducer,\n  news: newsReducer,\n  chart: chartReducer,\n  wallets: walletsReducer,\n  explorer: explorerReducer,\n  xchange: xChangeReducer,\n  WSocket: WSocketReducer\n})\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  reducers,\n  //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  storeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store","import {THEME_CHANGE} from '../constants/action-types'\n\nconst setThemeAction = (theme) => {\n\n    //console.log(theme, \"LLEGA COLRO oA ACTION\")\n    return {\n      type: THEME_CHANGE,\n      payload: theme\n    }\n  }\n\nexport default setThemeAction;","import React, { useState } from 'react'\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap'\nimport { withStyles } from '@material-ui/core/styles'\nimport { grey } from '@material-ui/core/colors'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Switch from '@material-ui/core/Switch'\nimport { IoIosCube, IoIosMoon, IoMdSunny, IoMdSearch } from 'react-icons/io'\nimport { Link, withRouter } from 'react-router-dom'\nimport setThemeAction from '../actions/Theme'\nimport { connect } from 'react-redux'\n\nconst style = {\n  //color: \"white\",\n  //backgroundColor: \"black\",\n  fontSize: 'medium',\n  marginRight: '1em'\n}\n\nconst Header = props => {\n\n  const imagecode1 = require(\"../layout/imgs/crypto8.png\");\n  const imagecode2 = require(\"../layout/imgs/crypto7.jpg\");\n\n\n  const [checked, Check] = useState(false)\n  const ThemeButton = withStyles(theme => ({\n    root: {\n      color: props.txtColor,\n      backgroundColor: props.color[500],\n      '&:hover': {\n        backgroundColor: props.color[700]\n      }\n    }\n  }))(Button, Typography)\n\n  const ThemeSwitch = withStyles({\n    switchBase: {\n      color: grey[50],\n      '&$checked': {\n        color: grey[300]\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[300]\n      }\n    },\n    checked: {\n      color: grey[50],\n      '&$checked': {\n        color: grey[300]\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[300]\n      }\n    },\n    track: {}\n  })(Switch)\n\n  const theme = {\n    backgroundColor: props.color,\n    textColor: props.txtColor\n  }\n\n  //console.log(props, 'PROS DE HEADERS')\n\n\n  return (\n    <>\n      <Navbar collapseOnSelect expand=\"lg\" className='sticky-top shadow-lg' style={theme}>\n        <IconButton\n          edge='start'\n          className='nn'\n          color='inherit'\n          aria-label='menu'\n          onClick={() => props.history.push('/')}>\n          <IoIosCube size='1.5em' color={props.txtColor} />\n        </IconButton>\n        <ThemeButton onClick={() => props.history.push('/')}>CryptoCenter</ThemeButton>\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className='m-lg-auto' >\n            <ThemeButton\n              style={theme}\n              onClick={() => props.history.push('/news')}>\n              News\n            </ThemeButton>\n            <ThemeButton\n              href=''\n              style={theme}\n              onClick={() => props.history.push('/charts')}>\n              Charts\n            </ThemeButton>\n\n            <ThemeButton\n              href=''\n              style={theme}\n              onClick={() => props.history.push('/wallets')}>\n              Wallet\n            </ThemeButton>\n            <ThemeButton\n              href=''\n              style={theme}\n              onClick={() => props.history.push('/explorer')}>\n              Explorer\n            </ThemeButton>\n            <ThemeButton\n              href=''\n              style={theme}\n              onClick={() => props.history.push('/xchange')}>\n              CoinChange\n            </ThemeButton>\n          </Nav>\n          <Form inline>\n            <FormControl type='text' placeholder='Search' className='mr-sm-2' />\n          </Form>\n\n\n          <IoMdSunny size='1.5em' color={props.txtColor} />\n          <ThemeSwitch\n            checked={checked}\n            onClick={() => {\n              props.setThemeAction(\n                props.color === 'black' ? 'whitesmoke' : 'black'\n\n              )\n              Check(!checked)\n            }\n            }\n          />\n          <IoIosMoon size='1.5em' style={{ color: props.txtColor }} />\n        </Navbar.Collapse>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      </Navbar>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    color: state.theme.theme.color,\n    txtColor: state.theme.theme.textColor\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setThemeAction: payload => dispatch(setThemeAction(payload))\n})\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Header))\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Footer\n","\n\nexport const WServer = 'ws://192.168.1.4/ws/test'\nexport const UrlApiImage = 'https://www.cryptocompare.com/'\nexport const UrlApiCoin = 'https://min-api.cryptocompare.com/data/top/totalvolfull?limit=100&tsym=USD'\nexport const ApiNews = 'api/news/'\nexport const ApiWallets = 'api/wallets/'\nexport const ApiExplorer = 'http://chainz.cryptoid.info/explorer/api.dws?q=summary/'\n//const conn = new WebSocket(\"wss://testnet-dex.binance.org/api/ws\");\n\n\n//export const customconn = new WebSocket(`wss://stream.binance.com:9443/stream?streams=btcusdt@kline_4h`) \n\nexport const apiKeys = {\n\n        coinmarket: 'b9a85acc-c37a-453d-ab54-ec1e9e0e9f92',\n        cryptocompare: 'f58c657e5cc22ea83a0d2c759e6e4a7ff172e92716e603aff9d3b5eeec2076ac'\n\n}\n\nexport const sources = [\n        {\n                getAction: 'crypto table data',\n                url: 'https://min-api.cryptocompare.com/data/top/totalvolfull?limit=100&tsym=USD',\n                method: 'GET',\n                data: '',\n                headers: ''\n        }\n\n]","import {\n  GET_DATA,\n  ERROR_GET,\n  GET_NEWS,\n  ERROR_GET_NEWS,\n  LOADING_FETCH,\n  GET_LATEST,\n  LOADING_CHART,\n  CHART_READY,\n  ERROR_GET_CHART,\n  LOADING_WALLETS,\n  GET_WALLETS,\n  ERROR_GET_WALLETS,\n  LOADING_EXPLORER,\n  GET_EXPLORER,\n  ERROR_GET_EXPLORER,\n} from '../constants/action-types'\nimport axios from 'axios'\nimport adapter from 'axios/lib/adapters/http'\nimport { UrlApiCoin, ApiNews, ApiWallets, ApiExplorer } from '../services/apisources'\n\n\nexport const getApiData = () => dispatch => {\n\n  if (localStorage.getItem('apiData') === null) {\n\n    console.log(localStorage.getItem('apiData'))\n\n    axios(\n      UrlApiCoin\n    )\n      .then(data => {\n        dispatch({ type: GET_DATA, payload: data.data.Data })\n        localStorage.setItem('apiData', JSON.stringify(data.data.Data))\n      })\n      .catch(error => {\n        console.log(error, 'ERROR APIDATA')\n        dispatch({ type: ERROR_GET, payload: error })\n      })\n  } else {\n    dispatch({\n      type: GET_DATA,\n      payload: JSON.parse(localStorage.getItem('apiData'))\n    })\n  }\n}\n\nexport const getApiNews = () => dispatch => {\n\n  dispatch({ type: LOADING_FETCH })\n\n  axios(ApiNews)\n    .then(data => {\n      if (!data.data['error']) {\n        dispatch({ type: GET_NEWS, payload: data.data })\n        localStorage.setItem('newsData', JSON.stringify(data.data))\n      }\n    })\n\n    .catch(error => {\n      console.log(error, 'ERROR NEWSDATA')\n      dispatch({ type: ERROR_GET_NEWS, payload: error })\n    })\n}\n\nexport const getLatest = (site, keyword) => dispatch => {\n  console.log(site, keyword, 'PETICON PARA BUSCAR')\n\n  dispatch({ type: LOADING_FETCH })\n  axios.post(\n    ApiNews,\n    {\n      searchsite: site,\n      keyword\n    },\n    {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n  )\n\n    .then(data => {\n      dispatch({ type: GET_LATEST, payload: data.data })\n      localStorage.setItem('latestnews', JSON.stringify(data.data))\n    })\n    .catch(error => {\n      console.log(error, 'ERROR APIDATA')\n      dispatch({ type: ERROR_GET_NEWS, payload: error })\n    })\n}\n\n///////////////////////\nexport const getChartData = (topsymbol, limit, timechart) => dispatch => {\n\n  const localChartData = JSON.parse(localStorage.getItem('chartdata'))\n\n  //console.log(localChartData, 'valor de localstroare data')\n  //console.log(timechart, \"PARAEJECUTAR EB CONSUTA API CHART\")\n\n  if (!localChartData) {\n\n    //  console.log('ME JECUTO APIDATA')\n\n    const promises = []\n\n    console.log((topsymbol, limit), 'PETICON PARA CHART')\n    dispatch({ type: LOADING_CHART })\n\n\n    console.log(topsymbol, 'TOPSYMBOL LIST')\n\n    if (topsymbol && topsymbol !== null) {\n      let chartData = []\n      console.log('ahora antes de ahcer los fetchs')\n      topsymbol.map(async symbols => {\n        promises.push(\n          axios.get(\n            `https://min-api.cryptocompare.com/data/histo${timechart}?fsym=${symbols}&tsym=USD&limit=${limit}`\n          )\n        )\n      })\n      axios\n        .all(promises)\n        .then(data => {\n          //data.data.Data['symbol'] = symbols\n          console.log(data, 'RESUKTADO TOTAL GLOBAL')\n          console.log(topsymbol.length, 'ARRAY SYMBOLO')\n          for (let i = 0; i < topsymbol.length; i++) {\n            chartData.push({\n              time: timechart,\n              symbol: topsymbol[i],\n              finaldata: data[i].data.Data\n            })\n          }\n          dispatch({\n            type: CHART_READY,\n            payload: chartData\n          })\n          console.log(chartData, 'PARA GUARDAR EN LOCALSTORAGE')\n          localStorage.setItem('chartdata', JSON.stringify(chartData))\n        })\n\n        .catch(error => {\n          console.log(error, 'ERROR APIDATA')\n          dispatch({ type: ERROR_GET_CHART, payload: error })\n        })\n    } else {\n      dispatch({ type: ERROR_GET_CHART, payload: 'error al cargar' })\n    }\n  } else {\n    console.log('me ejecuto YO ALFINAL  de APIDATa')\n    dispatch({\n      type: CHART_READY,\n      payload: JSON.parse(localStorage.getItem('chartdata'))\n    })\n  }\n}\n\nexport const getWallets = () => dispatch => {\n\n  dispatch({ type: LOADING_WALLETS })\n\n  axios(ApiWallets)\n    .then(data => {\n      if (!data.data['error']) {\n        dispatch({ type: GET_WALLETS, payload: data.data })\n        localStorage.setItem('walletsData', JSON.stringify(data.data))\n      }\n    })\n\n    .catch(error => {\n      console.log(error, 'ERROR WALLETSDATA')\n      dispatch({ type: ERROR_GET_WALLETS, payload: error })\n    })\n}\n\nexport const getExplorers = () => dispatch => {\n\n  dispatch({ type: LOADING_EXPLORER })\n\n  axios(ApiExplorer)\n    .then(data => {\n\n      dispatch({ type: GET_EXPLORER, payload: data.data })\n\n      localStorage.setItem('explorerData', JSON.stringify(data.data))\n\n    })\n\n    .catch(error => {\n      console.log(error, 'ERROR EXPLORERDATA')\n      dispatch({ type: ERROR_GET_EXPLORER, payload: error })\n    })\n}\n","import {\n    WEBSOCKET_CONNECT, WEBSOCKET_CONNECTING, WEBSOCKET_CONNECTED,\n    WEBSOCKET_MESSAGE, WEBSOCKET_DISCONNECT, WEBSOCKET_DISCONNECTED,\n    WEBSOCKET_ERROR\n} from '../constants/action-types'\n\n\nexport const ConnectWS = (wsUrl) => dispatch => {\n\n    console.log(wsUrl, 'PREPARO COENXION A WS');\n\n    dispatch({ type: WEBSOCKET_CONNECTING })\n\n    let wsconn = new WebSocket(wsUrl)\n\n    wsconn.onopen = function (event) {\n\n\n        //console.log(\"CONECTADO WSSSSSSS\");\n        wsconn.send(JSON.stringify({ message: 'CONNECTED FROM FRONTEND' }));\n        dispatch({ type: WEBSOCKET_CONNECTED, payload: event.data })\n        //   // send Subscribe/Unsubscribe messages here (see below)\n\n\n\n    }\n    wsconn.onmessage = function (event) {\n\n        console.log(\"MENSAGE RECIBIDO WSSSSSSS\");\n        dispatch({\n            type: WEBSOCKET_MESSAGE,\n            payload: {\n                'cryptoData': JSON.parse(event.data).message.cryptoData.Data,\n                'explorerInfo': JSON.parse(event.data).message.explorerInfo,\n                'exchangeData': JSON.parse(event.data).message.exchangeData\n            }\n        })\n\n        localStorage.setItem('apiData', JSON.stringify(JSON.parse(event.data).message.cryptoData.Data))\n        localStorage.setItem('othData', JSON.stringify(JSON.parse(event.data).message))\n\n    }\n\n    wsconn.onerror = function (event) {\n\n        //console.log(\"ERRROR DE WSSSSSSS\");\n\n        dispatch({ type: WEBSOCKET_ERROR, payload: event.data })\n    }\n\n    wsconn.onclose = function (event) {\n\n        //console.log(\"DESCONECTADO WSSSSSSS\");\n        dispatch({ type: WEBSOCKET_DISCONNECTED, payload: event.data })\n    }\n}","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport moment from 'moment';\nimport { connect } from 'react-redux'\n\nvar timedata = [];\nvar valuedata = [];\n\nconst Linecharts = props => {\n  function randomData() {\n    now = new Date(+now + oneDay);\n    value = value + Math.random() * 21 - 10;\n    return {\n      name: now.toString(),\n      value: [\n        [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\n        Math.round(value)\n      ]\n    };\n  }\n\n  var data = [];\n  var now = +new Date(2018, 9, 3);\n  var oneDay = 24 * 3600 * 1000;\n  var value = Math.random() * 1000;\n  for (var i = 0; i < 1000; i++) {\n    data.push(randomData());\n  }\n\n  let option = {\n    title: {\n      text: 'Chart Example'\n    },\n    textStyle: {\n      color: '#ffffff'\n    },\n    tooltip: {\n      trigger: 'axis',\n      formatter: function (params) {\n        params = params[0];\n        var date = new Date(params.name);\n        return (\n          date.getDate() +\n          '/' +\n          (date.getMonth() + 1) +\n          '/' +\n          date.getFullYear() +\n          ' : ' +\n          params.value[1]\n        );\n      },\n      axisPointer: {\n        animation: false\n      }\n    },\n    xAxis: {\n      type: 'time',\n      splitLine: {\n        show: false\n      }\n    },\n    yAxis: {\n      type: 'value',\n      boundaryGap: [0, '100%'],\n      splitLine: {\n        show: false\n      }\n    },\n    series: [\n      {\n        name: '模拟数据',\n        type: 'line',\n        smooth: true,\n        areaStyle: {},\n        showSymbol: false,\n        hoverAnimation: false,\n        data: data\n      }\n    ]\n  };\n\n  setInterval(function () {\n    for (var i = 0; i < 5; i++) {\n      data.shift();\n      data.push(randomData());\n    }\n\n    // myChart.setOption({\n    //     series: [{\n    //         data: data\n    //     }]\n    // });\n  }, 1000);\n\n  return (\n    <ReactEcharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      theme={'theme_name'}\n    />\n  );\n};\n\nexport default Linecharts;\n\nconst RawLine2 = props => {\n\n  //console.log(props, 'PROPS DE LINE2');\n  //console.log(props.data, 'DATA PARA CREAR TIEMP0 Y CLOSE');\n  //console.log(typeof (props.data), \"TIPO DE PROPS DATA\");\n\n  let chartDate = [];\n  let chartData = [];\n\n  if (props.data) {\n    Object.keys(props.data).map((line, index) => {\n      //console.log(props.data[line], \"QUIEN CONO SOY\")\n      chartDate.push(moment(props.data[line].time).format('LT'))\n      chartData.push(props.data[line].close)\n    })\n  }\n\n\n  //console.log(props.chartime, 'PARA DIVIDIR GRAPHIC')\n\n  const option = {\n    textStyle: {\n      color: '#000000'\n    },\n    grid: {\n\n      borderColor: '#ffffff',\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      }\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      splitNumber: 5,\n      data: chartDate,\n      splitLine: { show: false }\n    },\n    yAxis: {\n      type: 'value',\n      splitLine: { show: false },\n      // FOR BETTER VISUALIZATION IN START AXIS VALUE\n      min: chartData[0] / 1.5\n    },\n    series: [\n      {\n        name: 'BTC',\n        data: chartData,\n        type: 'line',\n        areaStyle: {},\n        datasetIndex: 20\n      }\n    ]\n  };\n\n\n  return (\n    <center>\n      <ReactEcharts\n        option={option}\n        notMerge={true}\n        lazyUpdate={true}\n        theme={'theme_name'}\n        style={{ height: '250px', width: '300px' }}\n      />\n    </center>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    color: state.theme.theme.color,\n    txtColor: state.theme.theme.textColor\n  }\n}\n\nexport const Line2 = connect(mapStateToProps)(RawLine2)\n\n\n\nexport const Line3 = props => {\n  const option = {\n    title: {\n      text: '动态数据',\n      subtext: '纯属虚构'\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        label: {\n          backgroundColor: '#283b56'\n        }\n      }\n    },\n    legend: {\n      data: ['最新成交价', '预购队列']\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataView: { readOnly: false },\n        restore: {},\n        saveAsImage: {}\n      }\n    },\n    dataZoom: {\n      show: false,\n      start: 0,\n      end: 100\n    },\n    xAxis: [\n      {\n        type: 'category',\n        boundaryGap: true,\n        data: (function () {\n          var now = new Date();\n          var res = [];\n          var len = 10;\n          while (len--) {\n            res.unshift(now.toLocaleTimeString().replace(/^\\D*/, ''));\n            now = new Date(now - 2000);\n          }\n          return res;\n        })()\n      },\n      {\n        type: 'category',\n        boundaryGap: true,\n        data: (function () {\n          var res = [];\n          var len = 10;\n          while (len--) {\n            res.push(10 - len - 1);\n          }\n          return res;\n        })()\n      }\n    ],\n    yAxis: [\n      {\n        type: 'value',\n        scale: true,\n        name: '价格',\n        max: 30,\n        min: 0,\n        boundaryGap: [0.2, 0.2]\n      },\n      {\n        type: 'value',\n        scale: true,\n        name: '预购量',\n        max: 1200,\n        min: 0,\n        boundaryGap: [0.2, 0.2]\n      }\n    ],\n    series: [\n      {\n        name: '预购队列',\n        type: 'bar',\n        xAxisIndex: 1,\n        yAxisIndex: 1,\n        data: (function () {\n          var res = [];\n          var len = 10;\n          while (len--) {\n            res.push(Math.round(Math.random() * 1000));\n          }\n          return res;\n        })()\n      },\n      {\n        name: '最新成交价',\n        type: 'line',\n        data: (function () {\n          var res = [];\n          var len = 0;\n          while (len < 10) {\n            res.push((Math.random() * 10 + 5).toFixed(1) - 0);\n            len++;\n          }\n          return res;\n        })()\n      }\n    ]\n  };\n\n  // app.count = 11;\n  const app = 11;\n  setInterval(function () {\n    const axisData = new Date().toLocaleTimeString().replace(/^\\D*/, '');\n\n    var data0 = option.series[0].data;\n    var data1 = option.series[1].data;\n    data0.shift();\n    data0.push(Math.round(Math.random() * 1000));\n    data1.shift();\n    data1.push((Math.random() * 10 + 5).toFixed(1) - 0);\n\n    option.xAxis[0].data.shift();\n    option.xAxis[0].data.push(axisData);\n    option.xAxis[1].data.shift();\n    option.xAxis[1].data.push(app.count++);\n  }, 2100);\n\n  return (\n    <ReactEcharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      theme={'theme_name'}\n    />\n  );\n};\n\nexport const Line4 = props => {\n  const option = '';\n  return (\n    <ReactEcharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      theme={'theme_name'}\n    />\n  );\n};\n\nexport const Line5 = props => {\n  const option = '';\n  return (\n    <ReactEcharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      theme={'theme_name'}\n    />\n  );\n};\n\nexport const Line6 = props => {\n  let klinedata = [];\n\n  for (let i = 0; i < 75; i++) {\n    klinedata.push(props.data[i]);\n    //    console.log(props.data[i], \"KLINEDATA\")\n  }\n\n  //console.log(klinedata, \"klinedata\")\n\n  //let dataYe = klinedata.map( (kdata, index) => moment(kdata[0]).format('LTS'))\n  let dataYe = props.values.map((map, index) => index);\n  //let dataEquis = klinedata.map( (kdata, index) => parseInt(kdata[1]))\n  let dataEquis = props.values.map((kdata, index) => parseInt(kdata));\n\n  //console.log(dataYe, \"dataYE\")\n  //console.log(dataEquis, \"dataEquis\")\n\n  const option = {\n    grid: {\n      left: 'center',\n      right: 'center',\n\n      bottom: '20%',\n      width: '100px',\n      height: '35px'\n    },\n    textStyle: {\n      color: '#ffffff'\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      data: dataYe\n    },\n    yAxis: {\n      type: 'value',\n      splitLine: {\n        show: false\n      }\n    },\n    series: [\n      {\n        data: dataEquis,\n        type: 'line',\n        areaStyle: {}\n      }\n    ]\n  };\n  return (\n    <ReactEcharts\n      option={option}\n      style={{ height: '100px' }}\n      notMerge={true}\n      lazyUpdate={true}\n      theme={'theme_name'}\n    />\n  );\n};\n","import { get } from 'lodash'\nimport { SORTED } from '../constants/action-types'\n\n\nexport const setSort = (sortKey) => (dispatch, getState) => {\n\n  //debugger;  \n  const sortParams = getState().apiData.sortDirection\n  //debugger;\n\n  //console.log(sortParams, \"SORT PARAMS PARa GET DEL ESTADO\")\n  const order = get(sortParams, \"order\");\n\n  //console.log(sortKey, \"KEY PARA SORTEAR\")\n  //console.log(order, \"ORDEN PARA SORTEAR\")\n\n  dispatch({\n    type: SORTED,\n    payload: {\n      sortKey: sortKey,\n      sortDirection: sortParams === \"desc\" ? \"asc\" : \"desc\"\n    }\n  })\n\n}","import { createSelector } from 'reselect'\nimport { orderBy } from 'lodash'\n\n\nconst rawData = state => state.WSocket && state.WSocket.wsData\nconst getKey = state => state.apiData && state.apiData.sortKey\nconst getDirection = state => state.apiData && state.apiData.sortDirection\n\n\nexport const sortData = createSelector(\n\n\n    [rawData, getKey, getDirection],\n\n    (data, sortKey, direction) => {\n\n        //console.log(data, \"RAWDAT\")\n        //console.log(sortKey, \"GETKEY\")\n        //console.log(direction, \"GET DIRECTIRO\")\n\n\n        if (sortKey === 'price' && data[0].cryptoData.length > 1) {\n            //console.log(\"EJECYTO EL SORT CON ORDER BY\")\n            //console.log(data[0].cryptoData, \"ESTRUCTURA DENTRO DE CRYTPO DATA\")\n\n            return orderBy(data[0].cryptoData, function (e) { return e.RAW.USD.PRICE }, direction)\n        }\n        if (sortKey === 'pctChange' && data[0].cryptoData.length > 1) {\n            //console.log(\"EJECYTO EL SORT CON ORDER BY\")\n            //console.log(data[0].cryptoData, \"ESTRUCTURA DENTRO DE CRYTPO DATA\")\n\n            return orderBy(data[0].cryptoData, function (e) { return e.RAW.USD.CHANGEPCT24HOUR }, direction)\n        }\n        if (sortKey === 'marketCap' && data[0].cryptoData.length > 1) {\n            //console.log(\"EJECYTO EL SORT CON ORDER BY\")\n            //console.log(data[0].cryptoData, \"ESTRUCTURA DENTRO DE CRYTPO DATA\")\n\n            return orderBy(data[0].cryptoData, function (e) { return e.RAW.USD.MKTCAP }, direction)\n        }\n        else {\n            //console.log(\"OMITO EL SORT\")\n            //console.log(data[0].cryptoData, \"ESTRUCTURA DENTRO DE CRYTPO DATA\")\n            return data\n        }\n    }\n\n)\n\n","import React from 'react';\nimport { Linecharts, Line2, Line3, Line4, Line5, Line6 } from './Cryptocharts';\nimport { connect } from 'react-redux';\nimport { UrlApiImage } from '../services/apisources';\nimport { getApiData, getChartData } from '../actions/apiData';\nimport { setSort } from '../actions/sort';\nimport { sortData } from '../selectors/sortData';\nimport { Table } from 'react-bootstrap'\n\nconst stythtd = {\n  padding: '20px',\n  borderColor: 'black'\n};\n\nconst Tables = (props, { color, txtColor, apiDatas, apiData }) => {\n\n  //console.log(props.coindata.data, \"COINDATA\")\n  //console.log(props, \"TODAS PROPS EN TABLLLLLAAAAAAA\")\n  //console.log(props.apiData, \"PROPS EN TABALAS\")\n  //console.log(props.apiDatas, \"APIDATAA DE SELECTORRRRRRRRRRRR\")\n\n\n  const showDetail = symbol => {\n    console.log('LOL APRETADO con', symbol);\n    //props.getChartData(symbol, 10);\n    props.detailCrypto(symbol);\n  };\n  //props.apiData ? props.apiData.sort((a, b) => b.RAW.USD.MKTCAP - a.RAW.USD.MKTCAP) : null\n  //console.log(props.apiDatas, 'PARA PINTAr EN tABLAS');\n\n  return (\n    <React.Fragment>\n      <div className=\"col-lg-11 col-sm-11\">\n        <Table responsive\n          borderless\n          hover\n          striped\n          className='m-auto p-lg-4 m-sm-auto p-4'\n        >\n          <thead\n            style={{ background: 'linear-gradient(to right, #000428, #004e92)', color: 'white' }}>\n            <tr style={{ textAlign: 'center' }}>\n              <th style={{ ...stythtd }}>Rank</th>\n              <th style={{ ...stythtd, textAlign: 'left' }}>Name</th>\n              <th style={stythtd} onClick={() => props.setSort('price')}>\n                Last Price\n            </th>\n              <th style={stythtd} onClick={() => props.setSort('pctChange')}>\n                % Change\n            </th>\n              <th style={stythtd} onClick={() => props.setSort('marketCap')}>\n                Market Cap\n            </th>\n              <th style={stythtd}>Circulating Supply</th>\n              <th style={stythtd}>24h Volume</th>\n            </tr>\n          </thead>\n          <tbody\n            style={{\n              color: props.txtColor === 'whitesmoke' ? 'whitesmoke' : 'black',\n              textAlign: 'left',\n              backgroundColor: props.color === 'black' ? '#232526' : 'whitesmoke'\n            }}>\n            {!props.apiDatas[0].CoinInfo\n              ? 0\n              : props.apiDatas.map((coin, index) => (\n                <tr\n                  style={{ padding: '2em' }}\n                  key={index}\n                  onClick={() => showDetail(coin)}>\n                  <td style={{ ...stythtd, overflowY: 'auto' }}>{index + 1} </td>\n                  <td style={{ ...stythtd, textAlign: 'left', overflowY: 'auto' }}>\n                    <img\n                      src={`${UrlApiImage}${coin.CoinInfo.ImageUrl}`}\n                      height='20px'\n                      width='20px'\n                      className='mr-3'\n                    />\n                    {coin.CoinInfo.FullName} {coin.CoinInfo.Name}\n                  </td>\n                  <td style={stythtd}>{coin.DISPLAY.USD.PRICE}</td>\n                  <td\n                    style={coin.RAW.USD.CHANGEPCT24HOUR > 0 ? { color: \"#1DAC22\" } : { color: \"red\" }}\n                  >\n                    {coin.DISPLAY.USD.CHANGEPCT24HOUR} %\n                  </td>\n                  <td style={{ ...stythtd, textAlign: 'left' }}>\n                    {coin.DISPLAY.USD.MKTCAP}{' '}\n                  </td>\n                  <td style={{ ...stythtd, textAlign: 'left' }}>\n                    {coin.DISPLAY.USD.SUPPLY}\n                  </td>\n                  <td style={{ ...stythtd, textAlign: 'left' }}>\n                    {coin.DISPLAY.USD.VOLUME24HOUR}\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </div>\n    </React.Fragment >\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    apiDatas: sortData(state),\n    color: state.theme.theme.color,\n    txtColor: state.theme.theme.textColor\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setSort: sortkey => dispatch(setSort(sortkey)),\n  getChartData: (symbol, limit) => dispatch(getChartData(symbol, limit)),\n  //clearSortParams: bindActionCreators(actions.clearSortParams, dispatch),  \n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tables);\n","import React, { useEffect, useState } from 'react'\nimport { Card } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { setSort } from '../actions/sort'\nimport { sortData } from '../selectors/sortData'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSpring, animated, interpolate, } from 'react-spring';\nimport { Spring, Transition } from 'react-spring/renderprops'\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { UrlApiImage } from '../services/apisources'\n\nconst style = {\n\n  // #explode .info { transition: all 0.7s; transform: scale(0.8); }\n  // #explode .pic { transition: all 0.7s; }\n  // #explode li:hover .info { opacity:1; transform: scale(1); }\n  // #explode li:hover .pic { opacity:0; transform: scale(1.4); }\n\n}\n\n\nconst Minichart = (props) => {\n\n  const [data2, setd] = useState('')\n\n\n  useEffect(() => {\n\n    //console.log(data2, \"effect\")\n\n  }, [])\n\n  //console.log(props.apiData, \"DATA cRUDA\")\n\n  let par1 = []\n  if (props.apiData.length > 1) {\n    //console.log(props.apiData, \"APIDATA A MINICUADROS\")\n    for (let i = 0; i < 5; i++) {\n      par1.push(props.apiData[i])\n    }\n  }\n  else {\n    par1 = null\n  }\n  //console.log(par1, \"SOY PAR1\")\n\n\n  return (\n    <div>\n      <h2 className=\"m-5\">Top 5 Crypto\n      <FormControl >\n          <InputLabel htmlFor=\"age-simple\"></InputLabel>\n          <Select\n            value={props.sortKey}\n            onChange={(e) => props.setSort(e.target.value)}\n            input={<OutlinedInput labelWidth='100' name=\"age\" />}\n\n          >\n            <MenuItem value={'price'}>Price</MenuItem>\n            <MenuItem value={'pctChange'}>% Change</MenuItem>\n            <MenuItem value={'marketCap'}>Market Cap</MenuItem>\n          </Select>\n        </FormControl> {props.sortDirection === \"desc\" ? \"Winners\" : \"Losers\"}\n      </h2>\n      <div className=\"row align-content-center col-lg-11 col-sm-11\" style={style}>\n        {par1 === null\n          ? 0\n          :\n          par1.map((ticker, index) =>\n            <Card className='m-5 m-sm-3 col-lg-2 col-sm-8'\n              style=\n              {{\n                background: props.theme.color === 'black' ? 'linear-gradient(to bottom, #232526, #414345)'\n                  : 'linear-gradient(to bottom, #ada996, #f2f2f2, #dbdbdb, #eaeaea)',\n                color: props.theme.textColor\n              }}\n              key={index}>\n              <Card.Header>\n                <div>\n                  <img src={`${UrlApiImage}${ticker.CoinInfo.ImageUrl}`} height=\"20px\" width=\"20px\" className=\"mr-3\" />\n\n                  <span className=\"ml-4\">{ticker.CoinInfo.Name}</span>\n                </div>\n              </Card.Header>\n              <Card.Body className=\"text-align-left\">\n                {!par1 ? 0 :\n                  <>\n\n                    <h4>\n                      <Transition\n                        items={ticker.DISPLAY.USD.PRICE}\n                        from={{ opacity: 0 }}\n                        enter={{ opacity: 1 }}\n                        leave={{ opacity: 0 }}>\n\n                        {item => props => <div style={props}>{ticker.DISPLAY.USD.PRICE}</div>}\n                      </Transition>\n                    </h4>\n                    <h5 style={ticker.RAW.USD.CHANGEPCT24HOUR > 0 ? { color: \"#1DAC22\" } : { color: \"red\" }}\n                    >\n                      {ticker.DISPLAY.USD.CHANGEPCT24HOUR}%</h5>\n                  </>\n                }\n              </Card.Body>\n            </Card>\n          )}\n\n      </div>\n    </div >\n  )\n}\n\nconst mapStateToProps = state => {\n\n  return {\n    apiData: sortData(state),\n    sortKey: state.apiData.sortKey,\n    sortDirection: state.apiData.sortDirection,\n    theme: state.theme.theme\n  };\n\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n  setSort: (sortkey) => dispatch(setSort(sortkey))\n  //clearSortParams: bindActionCreators(actions.clearSortParams, dispatch)\n});\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps)\n  (Minichart)\n","import React from 'react'\nimport { Modal, Button, Table } from 'react-bootstrap'\nimport Linecharts, { Line2, Line3, Line4, Line5, Line6 } from './Cryptocharts'\nimport { connect } from 'react-redux'\nimport { UrlApiImage } from '../services/apisources'\n\n\n\n\nconst ModalCrypto = (props) => {\n\n  const style = {\n\n    background: props.theme.color,\n    color: props.theme.textColor,\n    th: {\n      background: 'linear-gradient(to right, #000428, #004e92)', color: props.theme.textColor,\n      color: 'white'\n\n    },\n    td: {\n      color: props.theme.textColor === 'white' ? 'white' : 'black',\n      textAlign: 'left',\n      backgroundColor: props.theme.color === 'black' ? 'black' : '#f5f4f8'\n\n    },\n  }\n\n  //console.log(props, \"INFO PARA EL MODAL\");\n\n  return (\n    <div>\n      <Modal show={props.modal} onHide={() => props.showModal(false)} centered size=\"lg\">\n        <Modal.Header closeButton style={style}>\n          <Modal.Title>{props.info && props.info.CoinInfo.FullName ?\n            <>\n\n              <span className=\"ml-auto\"><img\n                src={`${UrlApiImage}${props.info.CoinInfo.ImageUrl}`}\n                height='45px'\n                width='45px'\n                className='mr-3'\n              />{props.info.CoinInfo.FullName}</span>\n              <span className='ml-5 pl-5' style={\n                props.info.RAW.USD.CHANGEPCTDAY > 0\n                  ? { color: '#39FF33' }\n                  : { color: 'red' }\n              }>{props.info.DISPLAY.USD.CHANGEPCTDAY} %</span>\n            </>\n            : ''}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={style}>\n          <div className=\"row mt-5\">\n\n            {props.info && props.info.DISPLAY ?\n              <div className='col-6'>\n                <Table responsive\n                  hover\n                  striped\n                  style={{\n                    color: props.theme.textColor === 'whitesmoke' ? 'whitesmoke' : 'black',\n                    textAlign: 'left',\n                    backgroundColor: props.theme.color === 'black' ? '#232526' : 'white'\n                  }}\n                >\n                  <tr>\n                    <th style={style.th}>Current Price</th><td colSpan='3'><h3><center>{props.info.DISPLAY.USD.PRICE}</center></h3></td>\n                  </tr>\n                  <tr>\n                    <th style={style.th}>Open Day</th><td>{props.info.DISPLAY.USD.OPENDAY}</td>\n\n                    <th style={style.th}>High Day</th><td>{props.info.DISPLAY.USD.HIGHDAY}</td>\n                  </tr>\n                  <tr>\n                    <th style={style.th}>Low Day</th><td>{props.info.DISPLAY.USD.LOWDAY}</td>\n\n                    <th style={style.th}>Volume Day</th><td>{props.info.DISPLAY.USD.VOLUMEDAY}</td>\n                  </tr>\n                  <tr>\n                    <th style={style.th}>Block Number</th><td>{props.info.CoinInfo.BlockNumber}</td>\n                    <th style={style.th}>Market Source</th><td>{props.info.DISPLAY.USD.LASTMARKET}</td>\n                  </tr>\n                </Table>\n              </div>\n              :\n              ''\n            }\n            <div className='col-6'>\n              <Linecharts />\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer style={style}>\n          <Button variant=\"info\" onClick={() => props.showModal(false)}>\n            Back\n              </Button>\n        </Modal.Footer>\n      </Modal>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.theme.theme\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps)\n  (ModalCrypto);\n\n","import React, { useState, useEffect } from 'react'\nimport { conn } from '../services/apisources'\nimport { connect } from 'react-redux'\nimport { getApiData, setSort, getChartData } from '../actions/apiData'\nimport { ConnectWS } from '../actions/websocket'\nimport Tables from '../components/Tables'\nimport Minichart from '../components/Minichart'\nimport ModalCrypto from '../components/ModalCrypto';\nimport { WhisperSpinner } from \"react-spinners-kit\";\n\n\nconst Home = (props) => {\n\n  //console.log(props, \"PRPOS EN HOME PARA CUASROS\")\n\n  //const initialData = JSON.parse(localStorage.getItem('apiData'))\n\n\n  const [modal, showModal] = useState(false)\n  const [crypto, showCrypto] = useState('')\n\n  const detailCrypto = (cryptopar) => {\n    console.log(cryptopar, \"PARA PASAR A MODAL\");\n    showModal(!modal)\n    showCrypto(cryptopar)\n  }\n\n  return (\n\n    <div>\n      {props.status === 'connecting' || props.status === 'connected' ?\n        <center>\n          <h1 className='mt-5 p-5'>Loading...</h1>\n          <WhisperSpinner\n            size='500'\n            color=\"#686769\"\n            loading='true'\n            frontColor=\"#386769\"\n            backColor=\"#646459\"\n            className=\"mt-5\"\n          />\n        </center>\n        :\n        <center>\n          <Minichart />\n\n          <h2 className=\"m-5\">Top 100 Crypto</h2>\n          <Tables\n            detailCrypto={detailCrypto}\n          />\n          <ModalCrypto\n            modal={modal}\n            showModal={showModal}\n            info={crypto}\n          />\n\n        </center>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.WSocket.status,\n    //txtColor: state.theme.theme.textColor\n  }\n}\n\nexport default connect(mapStateToProps, { getApiData, ConnectWS })(Home)","import React from 'react'\nimport { FaRegCaretSquareDown } from 'react-icons/fa'\nimport { Card, Alert, Button, DropdownButton, ButtonGroup, Dropdown } from 'react-bootstrap';\nimport { SwishSpinner } from 'react-spinners-kit';\nimport { connect } from 'react-redux'\n\n\nconst NewsSites = (props) => {\n\n  console.log(props, \"PROPS RECIBIDAS EN NES SITES\")\n\n\n  return (\n    <center><div className=\"row\">\n\n      {props.newsData && props.newsData.error ?\n\n        <Alert variant='danger'>ERROR</Alert>\n\n        :\n\n        props.newsData.map((data, index) => (\n          <Card className=\"m-5 m-sm-5 col-lg-5 col-sm-10\"\n            style=\n            {{\n              background: props.theme.color === 'black' ? 'linear-gradient(to bottom, #232526, #414345)'\n                : 'linear-gradient(to bottom, #ada996, #f2f2f2, #dbdbdb, #eaeaea)',\n              color: props.theme.textColor\n            }}\n          >\n            <div className='row'>\n              <div className='col-lg-4 col-sm-8'>\n\n                <Card.Img src={data.image} variant='top' className='m-2' />\n                <p className='m-5'><h1>{data.rank}</h1></p>\n              </div>\n              <div className='col-lg-8 col-sm-10'>\n                <Card.Body>\n                  <Card.Title>\n                    {data.site}\n                  </Card.Title>\n\n                  {console.log(props.latestnews[0], \"LATEST NEWS\")}\n\n\n                  <p>{data.description}</p>\n                  <div className='m-3'>\n                    <a href={data.link}><Button variant=\"dark\">Go to Site</Button></a>\n\n                    <ButtonGroup variant=\"info\">\n                      <DropdownButton as={ButtonGroup} title=\"Get Latest Info\" id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"news\" onClick={() => props.getLatest(data.link, 'news')}>Latest News</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"price\" onClick={() => props.getLatest(data.link, 'price')}>Price News</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"crypto\" onClick={() => props.getLatest(data.link, 'crypto')}>Crypto News</Dropdown.Item>\n                      </DropdownButton>\n                    </ButtonGroup>\n                  </div>\n                  {props.loading ?\n                    <div className='m-3'>\n                      <SwishSpinner />\n                    </div>\n                    :\n                    !(props.latestnews && props.latestnews.mainsite) ?\n                      ''\n                      :\n                      props.latestnews.mainsite === data.link ?\n                        props.latestnews.maindata.map(newsitem =>\n                          newsitem.url ?\n                            <li><a href={newsitem.url}>{newsitem.title}</a></li>\n                            :\n                            <Alert variant='danger'>No News get for this site now</Alert>\n                        )\n                        :\n                        ''\n                  }\n\n                </Card.Body>\n              </div>\n            </div>\n          </Card>\n        ))\n      }\n\n    </div></center>\n  )\n}\n\nconst mapStateToProps = state => {\n\n  return {\n    theme: state.theme.theme\n  }\n\n}\n\nexport default connect(\n  mapStateToProps)\n  (NewsSites)\n","import React, { useState, useEffect } from 'react'\nimport { WhisperSpinner } from \"react-spinners-kit\";\nimport NewsSites from '../components/NewsSites'\nimport { getApiNews, getLatest } from '../actions/apiData'\nimport { connect } from 'react-redux'\n\n\nconst News = ({\n    getApiNews,\n    loadingrx,\n    datanews,\n    error,\n    latestnews,\n    getLatest\n}) => {\n\n    useEffect(() => {\n\n        getApiNews()\n    }, [])\n\n    //console.log(datanews, 'NEWS VOY A PASAR LOS RESULTADOS ')\n\n    return (\n        <div>\n            {(loadingrx === true && datanews.length === 1) ? (\n                <center>\n                    <h1 className='mt-5'>Loading...</h1>\n                    <WhisperSpinner\n                        size='500'\n                        color=\"#686769\"\n                        loading='true'\n                        frontColor=\"#386769\"\n                        backColor=\"#646459\"\n                        className=\"mt-5\"\n                    />\n                </center>\n            ) : (\n                    <>\n                        <h1 className='m-5'> Crypto News Rank</h1>\n                        <NewsSites\n                            newsData={datanews}\n                            loading={loadingrx}\n                            latestnews={latestnews}\n                            getLatest={getLatest}\n                        />\n                    </>\n                )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        datanews: state.news.datanews,\n        loadingrx: state.news.loading,\n        error: state.news.error,\n        latestnews: state.news.latestnews\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    getApiNews: () => dispatch(getApiNews()),\n    getLatest: (site, keyword) => dispatch(getLatest(site, keyword))\n\n})\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(News)\n","import { createSelector } from 'reselect'\nimport { orderBy } from 'lodash'\nimport { getChartData } from '../actions/apiData'\n\nconst rawData = state => state.WSocket && state.WSocket.wsData\n//const rawData = state => state.apiData && state.apiData.apiData\n//const getKey = state => state.apiData && state.apiData.sortKey\n//const getDirection = state => state.apiData && state.apiData.sortDirection\n\n\nexport const TopCharts = createSelector(\n\n\n    [rawData],\n\n    (data) => {\n\n        console.log(data, \"RAWDATA PARA CHARTTTTTTT\")\n\n\n        const numberTop = (numTop) => {\n\n            if (data[0].cryptoData.length > 1) {\n                let Coinlist = []\n                for (let topCrypto = 0; topCrypto <= numTop; topCrypto++) {\n                    console.log(data[0].cryptoData[topCrypto].CoinInfo.Name, \"SYMBOLO PARA BUSCAR DATA\")\n                    Coinlist.push(data[0].cryptoData[topCrypto].CoinInfo.Name)\n\n                }\n                return Coinlist\n\n            }\n            else {\n                return null\n            }\n\n\n        }\n        return numberTop(10)\n\n    })","import React, { useState, useEffect } from 'react';\nimport { WhisperSpinner } from 'react-spinners-kit'\nimport { getChartData } from '../actions/apiData';\nimport { TopCharts } from '../selectors/TopCharts';\nimport { connect } from 'react-redux';\n//import {Card} from 'react-bootstrap'\nimport { Line2 } from './Cryptocharts';\nimport { FaRegCaretSquareDown } from 'react-icons/fa';\nimport Card from '@material-ui/core/Card';\nimport { red } from '@material-ui/core/colors';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nconst BaseCharts = ({\n  getChartData,\n  cryptoCharts,\n  chartData,\n  loadingch,\n  theme\n}) => {\n\n  const [value, setValue] = useState(0);\n  const [tmpdata, setTempData] = useState('')\n\n  const handleChange = (event, newValue) => {\n    console.log(newValue, 'VALOR PARA BOTOTN DE CHARTS');\n    localStorage.removeItem('chartdata')\n    getChartData(cryptoCharts, 10, newValue);\n\n    setValue(newValue);\n  };\n\n\n  useEffect(() => {\n\n    //console.log(cryptoCharts, 'LISTADO DE COINS A BUSKAR ');\n\n    getChartData(cryptoCharts, 10, 'day');\n\n  }, []);\n\n\n\n  //console.log(chartData, 'DATA VOY A PASAR LOS RESULTADOS A CHART');\n\n  return (\n\n    <center>\n      <h1 className='m-5'>Top Crtpto Charts</h1>\n      <AppBar position=\"static\" style={{ color: theme.color }}>\n        <Tabs value={chartData[0] ? chartData[0].time : 'day'}\n          onChange={handleChange}\n          variant='standard'\n          centered='true'>\n          <Tab label=\"Day\" value='day' style={{ color: theme.color }} />\n          <Tab label=\"Hour\" value='hour' style={{ color: theme.color }} />\n          <Tab label=\"Minute\" value='minute' style={{ color: theme.color }} />\n        </Tabs>\n      </AppBar>\n      <div className='row p-3 m-3'>\n        {loadingch ? (\n          <center>\n\n            <h1 className='mt-5'>Loading...</h1>\n            <WhisperSpinner\n              size='500'\n              color=\"#686769\"\n              loading='true'\n              frontColor=\"#386769\"\n              backColor=\"#646459\"\n              className=\"mt-5\"\n            />\n          </center>\n        ) : !chartData ? (\n          <p>ERROR</p>\n        ) :\n\n            (\n\n\n              chartData.map((data, index) => (\n                <Card\n                  className='col-lg-3 col-sm-9 p-1 m-5'\n                  style=\n                  {{\n                    background: theme.color === 'black' ? 'linear-gradient(to bottom, #232526, #414345)'\n                      : 'linear-gradient(to bottom, #ada996, #f2f2f2, #dbdbdb, #eaeaea)',\n                    color: theme.textColor\n                  }}\n                  key={data.time + index}>\n\n                  <p>{data.symbol}</p>\n                  <Line2 data={data.finaldata}\n                    chartime={data.time}\n                  />\n                </Card>\n              ))\n            )}\n      </div>\n    </center>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    cryptoCharts: TopCharts(state),\n    //////////////// PENDING ------------------------------------coindata: state.WSdata.,\n    chartData: state.chart.chartData,\n    loadingch: state.chart.loadingch,\n    //error: state.news.error,\n    theme: state.theme.theme\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getChartData: (topsymbol, limit, timechart) => dispatch(getChartData(topsymbol, limit, timechart))\n\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BaseCharts);\n","import React from 'react'\nimport BaseCharts from '../components/BaseCharts';\n\nconst style = {\n\n    //background: 'linear-gradient(to right, #000000, #434343)', /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n    textAlign: \"center\"\n\n}\n\nconst Charts = () => {\n    return (\n        <div style={style}>\n\n            <BaseCharts />\n\n        </div>\n    )\n}\n\nexport default Charts\n","import React, { useEffect } from 'react'\nimport { getWallets } from '../actions/apiData'\nimport { UrlApiImage } from '../services/apisources'\nimport { Card, Button, Alert, Table } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport Rating from 'react-rating';\nimport {\n  TiStarFullOutline, TiStarOutline\n} from 'react-icons/ti'\nimport { WhisperSpinner } from \"react-spinners-kit\";\n\nconst Wallets = ({ getWallets, walletsData, theme }) => {\n\n  const style = {\n    th: {\n      background: 'linear-gradient(to right, #000428, #004e92)', color: theme.textColor,\n      color: 'white',\n      width: '30'\n\n    }\n\n  }\n\n  useEffect(() => {\n    //console.log('mejecuto')\n\n    getWallets()\n  }, [])\n\n  return (\n    <div>\n      <h1 className=\"m-5\">Crypto Wallets</h1>\n      <div className=\"row justify-content-center align-content-center align-items-center\">\n        {walletsData.Data ?\n          Object.keys(walletsData.Data).map((line, index) => (\n\n            <Card className=\"col-lg-10 col-sm-10 m-3 m-sm-3\"\n              style=\n              {{\n                background: theme.color === 'black' ? 'linear-gradient(to bottom, #232526, #414345)'\n                  : 'linear-gradient(to bottom, #ada996, #f2f2f2, #dbdbdb, #eaeaea)',\n                color: theme.textColor\n              }}\n            >\n              <div className='row'>\n                <div className='col-lg-2 col-sm-4 mt-4 mb-4'>\n\n                  <img src={`${UrlApiImage}${walletsData.Data[line].LogoUrl}`}\n\n                    className='m-2'\n                    width='150'\n                    height='150'\n                  />\n                  <p><Rating initialRating={walletsData.Data[line].Rating.Avg}\n                    emptySymbol={<h6><TiStarOutline /></h6>}\n                    fullSymbol={<h6><TiStarFullOutline /></h6>\n                    } />\n                  </p>\n                  <p>{walletsData.Data[line].Name}</p>\n                </div>\n                <div className='col-lg-10 col-sm-6'>\n                  <Table hover striped className='m-1'>\n                    <tr><th style={style.th}>Security</th><td>{walletsData.Data[line].Security}</td></tr>\n                    <tr><th style={style.th}>Coins</th><td>{walletsData.Data[line].Coins.map(coins => ` ${coins} `)}</td></tr>\n                    <tr><th style={style.th}>Platforms</th><td>{walletsData.Data[line].Platforms.map(os => ` ${os} `)}</td></tr>\n                    <tr><th style={style.th}>Features</th><td>{walletsData.Data[line].WalletFeatures}</td></tr>\n                    <tr><td colSpan=\"2\"><a href={walletsData.Data[line].AffiliateURL}><Button>Site Link</Button></a></td></tr>\n                  </Table>\n                </div>\n              </div>\n\n            </Card>\n\n          ))\n          :\n          <>\n            <h1 className='mt-5 p-5'>Loading...</h1>\n            <WhisperSpinner\n              size='500'\n              color=\"#686769\"\n              loading='true'\n              frontColor=\"#386769\"\n              backColor=\"#646459\"\n              className=\"mt-5\"\n            />\n          </>\n\n        }\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    walletsData: state.wallets.walletsData,\n    loadingwl: state.wallets.loading,\n    error: state.wallets.error,\n    apiData: state.apiData.apiData,\n    theme: state.theme.theme\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getWallets: () => dispatch(getWallets())\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Wallets)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Table } from 'react-bootstrap';\n\n\nconst Explorer = (props) => {\n\n  const [data, setData] = useState([])\n\n  console.log(typeof (props.data), \"DATA PARA EXPLORER\")\n\n  return (\n    <div className='col-lg-12 col-sm-12  align-content-center p-5'>\n      <h1 className=\"m-5\">Crypto Explorer Data</h1>\n\n      {!props.data ?\n        <h1>NODATA</h1>\n        :\n        <Table responsive\n          borderless\n          hover\n          striped\n          className='m-auto p-lg-4 m-sm-auto p-4'\n        >\n          <thead style={{ background: 'linear-gradient(to right, #000428, #004e92)', color: 'white' }}>\n\n            <tr>\n              <th>name</th>\n              <th>PoW</th>\n              <th>PoS</th>\n              <th>height</th>\n              <th>diff</th>\n              <th>supply</th>\n              <th>ticker</th>\n            </tr>\n          </thead>\n          <tbody\n            style={{\n              color: props.txtColor === 'whitesmoke' ? 'whitesmoke' : 'black',\n              textAlign: 'center',\n              backgroundColor: props.color === 'black' ? '#232526' : 'white'\n            }}>\n\n            {Object.keys(props.data).map((line, index) => (\n              <tr>\n                <td>{props.data[line].name}</td>\n                <td>{props.data[line].PoW}</td>\n                <td>{props.data[line].PoS}</td>\n                <td>{props.data[line].height}</td>\n                <td>{props.data[line].diff}</td>\n                <td>{props.data[line].supply}</td>\n                <td>{props.data[line].ticker.btc}</td>\n              </tr>\n            ))\n\n            }\n          </tbody>\n        </Table>\n      }\n    </div>\n\n  )\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    data: state.WSocket.wsData[0].explorerInfo,\n    color: state.theme.theme.color,\n    txtColor: state.theme.theme.textColor\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  //clearSortParams: bindActionCreators(actions.clearSortParams, dispatch),\n  //getChartData: (symbol, limit) => dispatch(getChartData(symbol, limit))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Explorer);\n\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { UrlApiImage } from '../services/apisources'\nimport { Table, Button, ProgressBar } from 'react-bootstrap';\nimport Rating from 'react-rating';\nimport {\n  TiStarFullOutline, TiStarOutline\n} from 'react-icons/ti'\n\n\n\nconst xChange = (props) => {\n\n  console.log(props.data, \"DATA PARA EXCHANGE\")\n\n\n  return (\n\n    <div className='col-lg-12 col-sm-12  align-content-center p-5'>\n      <h1 className=\"m-5\">Crypto Exchanges Data</h1>\n\n      {!props.data ?\n        <h1>NODATA</h1>\n        :\n        <Table responsive\n          borderless\n          hover\n          striped\n          className='m-auto p-lg-4 m-sm-auto p-4'\n        >\n          <thead style={{ background: 'linear-gradient(to right, #000428, #004e92)', color: 'white' }}>\n            <tr>\n              <th>name</th>\n              <th>Type</th>\n              <th>Grade</th>\n              <th>Vol 24h</th>\n              <th>OrderBook</th>\n              <th>Rating</th>\n              <th>Url</th>\n            </tr>\n          </thead>\n          <tbody\n            style={{\n              color: props.txtColor === 'whitesmoke' ? 'whitesmoke' : 'black',\n              backgroundColor: props.color === 'black' ? '#232526' : 'white'\n            }}\n          >\n            {Object.keys(props.data).map((line, index) => (\n              <tr>\n                <td style={{ textAlign: 'Left' }}><img src={`${UrlApiImage}${props.data[line].LogoUrl}`}\n                  height=\"50\"\n                  width='50'\n                  className=\"ml-5 mr-5\"\n                /> {props.data[line].Name}</td>\n                <td>{props.data[line].CentralizationType}</td>\n                <td>{props.data[line].Grade} <ProgressBar animated now={props.data[line].GradePoints} /></td>\n                <td>{props.data[line].TOTALVOLUME24H.BTC}</td>\n                <td>{props.data[line].OrderBook}</td>\n                <td><Rating initialRating={props.data[line].Rating.Avg}\n                  emptySymbol={<h6><TiStarOutline /></h6>}\n                  fullSymbol={<h6><TiStarFullOutline /></h6>\n                  } /></td>\n                <td><a href={props.data[line].AffiliateURL}><Button>Link</Button></a></td>\n              </tr>\n            ))\n\n            }\n          </tbody>\n        </Table>\n      }\n\n    </div>)\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.WSocket.wsData[0].exchangeData.Data,\n    color: state.theme.theme.color,\n    txtColor: state.theme.theme.textColor\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(xChange);","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Header from './Header'\nimport Footer from './Footer'\nimport Home from '../pages/Home'\nimport News from '../pages/News'\nimport Charts from '../pages/Charts'\nimport Wallets from '../pages/Wallets'\nimport Explorer from '../pages/Explorer'\nimport xChange from '../pages/xChange'\nimport { ConnectWS } from '../actions/websocket'\nimport { createBrowserHistory } from 'history'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport { WServer } from '../services/apisources'\n\nconst hist = createBrowserHistory()\n\nconst mapStateToProps = state => {\n  return {\n    color: state.theme.theme.color,\n    txtColor: state.theme.theme.textColor\n  }\n}\n\nconst Main = ({ color, txtColor, ConnectWS }) => {\n  //console.log(color, txtColor,  \"DESDEREDUX\")\n  const imagecode1 = require(\"../layout/imgs/crypto8.png\");\n  const imagecode2 = require(\"../layout/imgs/crypto7.jpg\");\n\n  const style = {\n    // background: `linear-gradient(61deg, #000000 0%, rgba(0, 0, \n    //   0, .6) 70%),url(${imagecode1})`,\n    backgroundImage: color === 'whitesmoke' ? `url(${imagecode1})` : `url(${imagecode2})`,\n    textShadow: `${color === 'whitesmoke' ? '' : '5px 5px #000000'} `,\n    textOutline: color,\n    textDecoration: 'blink',\n\n    backgroundColor: color,\n    color: txtColor,\n    textAlign: 'center',\n    height: '100%'\n  }\n\n  useEffect(() => {\n\n    ConnectWS(WServer)\n  }, [])\n\n\n  return (\n    <div style={style}>\n      <Router history={hist}>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/news' component={News} />\n          <Route exact path='/charts' component={Charts} />\n          <Route exact path='/wallets' component={Wallets} />\n          <Route exact path='/explorer' component={Explorer} />\n          <Route exact path='/xchange' component={xChange} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, { ConnectWS })(Main)\n","import React from 'react'\nimport { createBrowserHistory } from 'history';\n\nimport {Provider} from 'react-redux'\nimport store from '../src/store'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Home from './layout/Main'\nimport Main from './layout/Main'\nimport News from './pages/News'\nimport Charts from './pages/Charts'\n\n\n\n\n\nconst App = () => {\n\n  return (\n    <Provider store={store}>\n      <Main/>\n    </Provider>\n)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}